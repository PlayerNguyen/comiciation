# This is a basic workflow to help you get started with Actions

name: Execute Test CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      DATABASE_HOST_DEV: "localhost"
      DATABASE_PORT_DEV: 3306
      DATABASE_USER_DEV: root
      DATABASE_PASSWORD_DEV: root
      DATABASE_NAME_DEV: test

    strategy:
      matrix:
        node: [12, 14, 16]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Using Node.js
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: "Initialize MySQL server"
        run: |
          sudo systemctl start mysql.service
          mysql -u${{env.DATABASE_NAME_DEV}} -p${{ env.DATABASE_PASSWORD_DEV }}
          CREATE TABLE ${{ env.DATABASE_NAME_DEV }};

      - name: "Install package and run testing unit"
        run: |
          yarn install
          yarn test
